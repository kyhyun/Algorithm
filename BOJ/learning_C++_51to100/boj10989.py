# boj10989 수 정렬하기3
# 메모리 제한 8MB으로, 일반적인 정렬 방법인 O(nlogn) 방식을 사용할 수 없다.
# 따라서, 특정 데이터가 몇 회 등장했는가를 세는 방식으로 정렬을 구상해야 하며,
# Counting Sort 라는 알고리즘을 이용해서 시간 복잡도 O(n)으로 구할 수 있다.
# 다만, 이 정렬 방식은 입력 데이터에 특별한 조건(데이터의 종류에 한정적)이 있어야 사용할 수 있다.

from sys import stdin
input = stdin.readline
N = int(input().rstrip())
N_list = [0 for _ in range(10001)]  # 리스트 컴프리헨션으로 0으로 이루어진 10,000 길이의 리스트 생성

for i in range(N):
    # 입력으로 들어오는 값을 배열의 인덱스 위치에 1의 값을 넣는다, 같은 값이 들어온다면 해당 인덱스에 1을 계속해서 더한다.
    N_list[int(input())] += 1

for i in range(10001):  # 해당 리스트를 전부 돌면서 1이 담긴 인덱스의 자릿 수를 찾는다.
    if N_list[i] != 0:
        # 리스트가 돌면서 입력되는 값에 맞게 정렬되기 때문에 임의 값으로 들어와도 오름차순으로 결과가 출력된다.
        for j in range(N_list[i]):  # 중복된 숫자는 그 값만큼 j번 출력된다.
            print(i)
