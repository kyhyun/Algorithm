/*
## 문제 해석
- 입력으로 지도에 대한 한 변의 크기 n과 2개의 정수 배열 arr1과 arr2가 들어오고 정수 배열의 각 원소를 이진수로 변환하여
두 배열을 합친 결과 값을 해독하여 '#'과 공백으로 구성된 문자열 배열을 담아 반환하는 문제입니다
  - 한 변의 길이는 1부터 16까지, 배열의 길이는 그 길이에 맞는 정수 배열로 주어집니다
  - 이진수로 변환된 문자의 길이 역시 n 이하로, 2^n - 1을 만족합니다

## 풀이 과정
- 문제를 본 순간 비트연산을 하는 방법으로 풀면 좋을 것 같다고 생각해서 바로 이진수로 변환한 후 모자란 비트에 대해서는 n의 길이만큼 채워 맞췄습니다
- 그리고 그렇게 만들어진 비트열의 길이는 n과 같으므로 내부에서 반복문을 한 번 더 순회해 각 비트 간에 OR 연산을 수행하여 결과 값을 문자열로 만들었습니다
- 두 정수 배열의 인덱스를 순회할 때 마다, answer 배열에 1은 '#'으로, 0은 공백으로 문자열 변환을 한 다음 담아주어 문제를 해결했습니다
*/

function solution(n, arr1, arr2) {
  const answer = [];

  for (let i = 0; i < n; i++) {
    let str = '';
    let bin1 = arr1[i].toString(2).padStart(n, '0');
    let bin2 = arr2[i].toString(2).padStart(n, '0');

    for (let j = 0; j < n; j++) str += bin1[j] | bin2[j];
    answer.push(str.replace(/1/g, '#').replace(/0/g, ' '));
  }

  return answer;
}
